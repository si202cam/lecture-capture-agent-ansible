#!/bin/bash

################################################################################
# This script looks in the script's directory for a file named password.asc
# which should be a gpg encrypted text file containing the passphase to unlock
# an ansible vault If this file exists, we try to de-encrypt it, if it doesn't
# exist we try to use the env variable VAULT_PASS_FILE which could be set to
# point to a preferred passphase file
################################################################################

if [ -n "$1" ] ; then
    PWFILE="$1"
else
    DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
    PWFILE=${VAULT_PASS_FILE:-"${DIR}/password.asc"}
fi

function help {
    cat << END_OF_HELP

`basename $0` is a helper script to supply ansible-vault with a vault
passphrase obtained from a file encrypted with one or more GPG public
keys. The default is to use vault_passphrase.gpg in the current
directory, this can be overridden by supplying a single filename as a
command line argument or defining VAULT_PASS_FILE in your environment.

END_OF_HELP
}

if [ -f "${PWFILE}" ]; then
    gpg -q --batch --use-agent --decrypt "${PWFILE}"
else
    echo "Password file not found: ${PWFILE}"
    help
    exit 1
fi

